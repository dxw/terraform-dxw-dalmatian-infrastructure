version: 0.2

phases:
  pre_build:
    commands:
      - echo Build started on `date`
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
      - |
        if [ -n "$DOCKER_ACCESS_TOKEN" ] && [ -n "$DOCKER_USERNAME" ]
        then
          echo Logging in to Dockerhub ...
          echo "$DOCKER_ACCESS_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
        fi
      - echo Updating yarn GPG keys ...
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:test .
  build:
    commands:
      - IMAGE_TAG=commit-$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo Tagging the successfully tested image as latest...
      - docker tag $IMAGE_REPO_NAME:test $REPOSITORY_URL:latest
      - docker tag $IMAGE_REPO_NAME:test $REPOSITORY_URL:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to ECR ...
      - IMAGE_TAG=commit-$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $REPOSITORY_URL:latest
      - docker push $REPOSITORY_URL:$IMAGE_TAG
      - echo "Writing image definitions file..."
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URL:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
  secondary-artifacts:
    imagedefinitions:
      files:
        - imagedefinitions.json
